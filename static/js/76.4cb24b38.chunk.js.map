{"version":3,"file":"static/js/76.4cb24b38.chunk.js","mappings":"qSAAMA,EAAW,+BACXC,EAAM,mCAECC,EAAW,mCAAG,6GAEJC,MAAM,GAAD,OACnBH,EADmB,sDACmCC,IAHpC,cAEjBG,EAFiB,gBAKVA,EAAKC,OALK,wEAOvBC,QAAQC,IAAR,MAPuB,yDAAH,qDAWXC,EAAS,mCAAG,WAAMC,GAAN,gGAEFN,MAAM,GAAD,OACnBH,EADmB,iCACcC,EADd,kBAC2BQ,EAD3B,YAFH,cAEfL,EAFe,gBAKRA,EAAKC,OALG,wEAOrBC,QAAQC,IAAR,MAPqB,yDAAH,sDAWTG,EAAU,mCAAG,WAAMC,GAAN,gGAEHR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,oBAAyCV,IAF3C,cAEhBG,EAFgB,gBAGTA,EAAKC,OAHI,wEAKtBC,QAAQC,IAAR,MALsB,yDAAH,sDASVK,EAAO,mCAAG,WAAMD,GAAN,gGAEAR,MAAM,GAAD,OACnBH,EADmB,kBACDW,EADC,4BAC0BV,IAH/B,cAEbG,EAFa,gBAKNA,EAAKC,OALC,wEAOnBC,QAAQC,IAAR,MAPmB,yDAAH,sDAWPM,EAAU,mCAAG,WAAMF,GAAN,gGAEHR,MAAM,GAAD,OACnBH,EADmB,kBACDW,EADC,4BAC0BV,IAH5B,cAEhBG,EAFgB,gBAKTA,EAAKC,OALI,wEAOtBC,QAAQC,IAAR,MAPsB,yDAAH,qD,qIC5CvB,EAA4B,wBAA5B,EAA+D,uBAA/D,EAAkG,wB,kBCK1FO,EAAmCC,EAAxBC,EAAwBD,EAAbE,EAAaF,EA6C3C,EA3Ca,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQT,GAAYU,EAAAA,EAAAA,MAAZV,QAUR,OARAW,EAAAA,EAAAA,YAAU,WAAM,wCACd,uGACyBV,EAAAA,EAAAA,IAAQD,GADjC,gBACUQ,EADV,EACUA,KACRC,EAAQD,GAFV,2CADc,yBAAC,WAAD,wBAKdhB,EACD,GAAE,CAACQ,KAGF,0BACE,eAAIY,UAAWT,EAAf,SACmB,IAAhBK,EAAKK,QACJ,uDAEAL,EAAKM,KAAI,SAAAC,GACP,OACE,gBAAgBH,UAAWP,EAA3B,WACE,gBACEW,IACED,EAAGE,aAAH,0CACuCF,EAAGE,cACtCC,EAENC,IAAKJ,EAAGK,KACRR,UAAWN,KAEb,wBACE,uBAAIS,EAAGK,UAET,uCAAeL,EAAGM,eAbXN,EAAGO,GAgBf,OAKV,C,0GCjDD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["api/api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'bc1a38dbf70e6a30c3ffc04bb2eb445c';\n\nexport const getTrending = async () => {\n  try {\n    const data = await fetch(\n      `${BASE_URL}/trending/movie/day?language=en-US&api_key=${KEY}`\n    );\n    return await data.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovies = async search => {\n  try {\n    const data = await fetch(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${search}&page=1`\n    );\n    return await data.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDetails = async movieId => {\n  try {\n    const data = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n    return await data.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const data = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n    );\n    return await data.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const data = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n    );\n    return await data.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_img\":\"Cast_cast_img__fJUn3\",\"cast_item\":\"Cast_cast_item__SSip9\"};","import { useState, useEffect } from 'react';\nimport { getCast } from 'api/api';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport poster from '../../images/no-image.png';\n\nconst { cast_list, cast_item, cast_img } = css;\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetch() {\n      const { cast } = await getCast(movieId);\n      setCast(cast);\n    }\n    fetch();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul className={cast_list}>\n        {cast.length === 0 ? (\n          <p>There is no info about cast</p>\n        ) : (\n          cast.map(el => {\n            return (\n              <li key={el.id} className={cast_item}>\n                <img\n                  src={\n                    el.profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${el.profile_path}`\n                      : poster\n                  }\n                  alt={el.name}\n                  className={cast_img}\n                />\n                <p>\n                  <b>{el.name}</b>\n                </p>\n                <p>Character: {el.character}</p>\n              </li>\n            );\n          })\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","KEY","getTrending","fetch","data","json","console","log","getMovies","search","getDetails","movieId","getCast","getReviews","cast_list","css","cast_item","cast_img","useState","cast","setCast","useParams","useEffect","className","length","map","el","src","profile_path","poster","alt","name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}